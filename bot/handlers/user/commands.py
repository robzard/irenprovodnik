import asyncio

from aiogram import Router, types, Bot
from aiogram.fsm.state import default_state
from aiogram.filters import CommandStart, StateFilter, Command

import logging

# from custom_logger.logger import logger
from common.db.requests import get_all_users
from filters.all_filters import IsAdmin
from keyboards.user.inline import command_start, channel_move_to_chatbot, send_all
from lexicon.lexicon import LEXICON
from states.states import FSMGpt, FsmData
from utils.utils import delete_need_messages, MessageEditor
# from custom_logger.logger import logger

router = Router(name=__name__)


@router.message(Command('forward_channel'), IsAdmin())
async def forward_message_to_channel(message: types.Message, bot: Bot):
    if message.reply_to_message:
        await bot.send_message(chat_id='@teylaschool_online', text=message.reply_to_message.text, reply_markup=channel_move_to_chatbot())
        await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª.")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å–ª–∞—Ç—å.")


@router.message(CommandStart(), StateFilter(default_state, FSMGpt.wait_question))
async def on_start(message: types.Message, fsm_data: FsmData, bot: Bot, message_editor: MessageEditor, user_id: int = None):
    await delete_need_messages(bot, message.chat.id, fsm_data, start=True)

    path_image_start = './static/images/start.jpg'

    await message_editor.handle_message(message, photo_path=path_image_start, photo=True, text=LEXICON['user_command_start'], reply_markup=command_start(user_id if user_id else message.from_user.id))
    await fsm_data.update_data(handler_name='–ú–µ–Ω—é', selected_course=None)


@router.message(Command('send_all'), IsAdmin())
async def forward_message_to_channel(message: types.Message, bot: Bot):
    text = ("–î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n"
            "<b>–ó–∞–≤—Ç—Ä–∞ —É–∂–µ —Å—Ç–∞—Ä—Ç –æ–±—É—á–µ–Ω–∏—è</b>üî•\n"
            "*<i>—Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å–µ–Ω—å—é</i>\n\n"
            "–£—Å–ø–µ–≤–∞–π—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –ø—Ä–æ–¥–∞–∂‚ù§Ô∏è"
            )
    users = await get_all_users()
    i = 0
    for user in users:
        try:
            await bot.send_message(chat_id=user.user_id, text=text, reply_markup=send_all(), parse_mode='HTML')
            logging.debug(f'–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.user_id}')
        except Exception as ex:
            logging.warning(f'–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! - {ex}')
        i += 1
        await asyncio.sleep(0.05)
    await message.answer(f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ {i} —á–µ–ª–æ–≤–µ–∫.")
